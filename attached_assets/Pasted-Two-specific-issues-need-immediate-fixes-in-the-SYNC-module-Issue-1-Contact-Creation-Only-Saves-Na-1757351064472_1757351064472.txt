Two specific issues need immediate fixes in the SYNC module:
Issue 1: Contact Creation Only Saves Name Field
The extractContactFromMeeting function is not working properly. Completely rewrite it with debugging:
javascriptfunction extractContactFromMeeting(meetingData) {
  console.log('=== EXTRACTING CONTACT FROM MEETING ===');
  console.log('Meeting data received:', JSON.stringify(meetingData, null, 2));
  
  const { title, attendees, organizer, start, end, location, description } = meetingData;
  
  // Extract name with multiple patterns
  let contactName = '';
  if (title) {
    console.log('Processing title:', title);
    
    // Try different name extraction patterns
    const patterns = [
      /^([A-Z][a-z]+)\s*\|/,           // "Tejas | RTLC"
      /^([A-Z][a-z]+)\s*-/,            // "Tejas - Meeting"
      /with\s+([A-Z][a-z]+)/i,         // "Meet with Tejas"
      /^([A-Z][a-z]+)\s+[A-Z]/         // "Tejas RTLC"
    ];
    
    for (const pattern of patterns) {
      const match = title.match(pattern);
      if (match) {
        contactName = match[1];
        console.log('Name extracted:', contactName);
        break;
      }
    }
  }
  
  // Create contact data with ALL fields explicitly
  const contactData = {
    'Name': contactName || 'Unnamed Contact',
    'Company': 'Unknown Company',
    'Email': attendees && attendees[0] ? attendees[0].email || '' : '',
    'Phone': '',
    'Last Contacted': start ? new Date(start).toISOString().split('T')[0] : new Date().toISOString().split('T')[0],
    'Next Follow-up': start ? new Date(new Date(start).getTime() + 14*24*60*60*1000).toISOString().split('T')[0] : '',
    'Relationship Type': 'Client',
    'Contact Source': 'Event',
    'Notes': `Meeting: ${title || 'Unknown'}\nDate: ${start ? new Date(start).toLocaleDateString() : 'Unknown'}`,
    'Contact Status': 'Active'
  };
  
  console.log('Contact data to create:', JSON.stringify(contactData, null, 2));
  return contactData;
}
Issue 2: Details Modal Shows Wrong Meeting
The meeting lookup in /api/sync/meeting-details/:meetingId is broken. Fix it by:

Add extensive logging to see what's happening:

javascriptapp.get('/api/sync/meeting-details/:meetingId', async (req, res) => {
  try {
    const { meetingId } = req.params;
    console.log('=== MEETING DETAILS DEBUG ===');
    console.log('Requested meetingId:', meetingId);
    
    const calendarMeetings = await outlookService.getMeetings(req.session.user.id);
    console.log('Total meetings found:', calendarMeetings.length);
    console.log('First 3 meeting IDs:', calendarMeetings.slice(0, 3).map(m => ({ id: m.id, title: m.title })));
    
    // Try to find meeting with multiple strategies
    let meeting = calendarMeetings.find(m => m.id === meetingId);
    console.log('Direct ID match:', meeting ? meeting.title : 'NOT FOUND');
    
    if (!meeting) {
      meeting = calendarMeetings.find(m => m.title && m.title.includes(meetingId));
      console.log('Title includes match:', meeting ? meeting.title : 'NOT FOUND');
    }
    
    if (!meeting) {
      // Use the first meeting as fallback for testing
      meeting = calendarMeetings[0];
      console.log('Using fallback meeting:', meeting ? meeting.title : 'NO MEETINGS');
    }
    
    res.json({ success: true, meeting: meeting });
  } catch (error) {
    console.error('Meeting details error:', error);
    res.status(500).json({ success: false, error: error.message });
  }
});
Issue 3: Frontend Meeting ID Passing
Check how the meeting ID is being passed from frontend to backend. Update the Details button click:
javascriptconst handleShowDetails = async () => {
  console.log('Requesting details for meeting:', meeting.id, meeting.title);
  // Rest of the function...
}
Expected Results:

Contact creation should populate ALL fields (Name, Company, Email, etc.)
Details modal should show the correct meeting data
Console logs should show exactly what's happening with IDs and data

Testing Steps:

Click "Create Record" on Tejas meeting → Check console logs and Airtable record
Click "Details" on Tejas meeting → Should show Tejas data, not Lion Cage data